<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Forgot Password</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: Arial, sans-serif;
      height: 100vh;
      display: flex;
    }

    .container {
      display: flex;
      width: 100%;
      height: 100vh;
    }

    .form-section, .image-section {
      flex: 1;
      height: 100%;
    }

    .form-section {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      padding: 40px;
      background-color: #ffffff;
    }

    .form-section h2 {
      margin-bottom: 20px;
      color: #333;
    }

    form {
      width: 100%;
      max-width: 400px;
    }

    form label {
      display: block;
      margin-bottom: 8px;
      font-size: 14px;
      color: #555;
    }

    form input {
      width: 100%;
      padding: 10px;
      margin-bottom: 20px;
      border: 1px solid #ccc;
      border-radius: 4px;
      position: relative;
    }

    form button {
      width: 50%;
      padding: 5px;
      background-color: #007bff;
      color: #fff;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      font-size: 16px;
    }

    form button:hover {
      background-color: #0056b3;
    }

    .image-section {
      display: flex;
      align-items: center;
      justify-content: center;
      overflow: hidden; 
    }

    .image-section img {
      width: 100%;
      height: 100%;
      object-fit: cover; 
    }

    .eye-icon {
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      cursor: pointer;
      width: 20px; 
      height: 20px; 
    }

    .input-container {
      position: relative;
      width: 100%;
    }
   
  .input-container {
    position: relative;
  }

.input-container {
  position: relative;
  width: 100%;
  display: flex;
  align-items: center;
}

.input-container input {
  width: 100%;
  padding-right: 40px;
  height: 40px;
  border: 1px solid #ccc;
  border-radius: 4px;
  font-size: 14px;
  padding: 8px;
  box-sizing: border-box;
}

/* Eye icon styles */
.input-container img {
  position: absolute;
  right: 10px; /* Adjust for positioning */
  top: 50%;
  transform: translateY(-50%);
  width: 20px; /* Adjust icon size */
  height: 20px;
  cursor: pointer;
}

#resendOtpBtn {
      width: 50%;
      margin-top: 3px;
      padding: 10px;
      background-color: #007bff;
      color: white;
      border: none;
      cursor: pointer;
      font-size: 14px;
      border-radius: 4px;
      display: block;
    }
    #resendOtpBtn:disabled {
      background-color: gray;
      cursor: not-allowed;
    }
    .message {
      color: red;
      font-size: 14px;
      margin-top: 10px;
    }


  </style>
</head>
<body>
  <div class="container">
    <div class="form-section">
      <h2>Verify OTP</h2>

      

      <form id="otpForm" action="/verify-otp" method="POST">
        <input type="text" name="otp" placeholder="Enter OTP" required />
        <% if (message) { %>
          <p class="message" style="color: red;"><%= message %></p>
        <% } %>
        <div style="display: flex; gap: 40px;">
        <button type="submit">Verify OTP</button>
      </form>
      <button id="resendOtpBtn" onclick="resendOtp()" disabled>Resend OTP (30s)</button>

    </div>


  
    
    </div>
    <div class="image-section">
      <!-- Replace with your own image -->
      <img src="/images/signin.jpg" alt="Right Side Image">
    </div>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script> 
  <script>
    let countdown = 30; // Initial countdown time
    let timer;
  
    function startTimer() {
      const resendBtn = document.getElementById("resendOtpBtn");
      resendBtn.disabled = true; // Disable button initially
  
      timer = setInterval(() => {
        if (countdown > 0) {
          resendBtn.innerText = `Resend OTP (${countdown}s)`;
          countdown--;
        } else {
          clearInterval(timer);
          resendBtn.disabled = false;
          resendBtn.innerText = "Resend OTP";
        }
      }, 1000);
    }
  
    async function resendOtp() {
      try {
        const response = await fetch("/resend-otp", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });
  
        const result = await response.json();
  
        if (response.ok) {
          Swal.fire({
          icon: "success",
          title: "OTP Sent!",
          text: result.message,
          timer: 2000, 
          showConfirmButton: false
        });
          countdown = 30; // Reset countdown
          startTimer();
        } else {
          throw new Error(result.message || "Error resending OTP");
        }
      } catch (error) {
        Swal.fire({
        icon: "error",
        title: "Oops!",
        text: error.message,
        timer: 2000, 
        showConfirmButton: false
      });
      }
    }
  
    startTimer(); // Start countdown when page loads
  </script>
  
</body>
</html>
