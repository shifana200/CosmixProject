<%- include("../../views/partials/admin/header") %>
<head>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

   <style>
        
   body {
       font-family: Arial, sans-serif;
       background-color: #f8f9fa;
   }

   .content-main {
       padding: 20px;
   }

   .content-header h2 {
       font-size: 24px;
       font-weight: bold;
       color: #333;
       margin-bottom: 20px;
   }

   .card {
       border: none;
       border-radius: 8px;
       box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
   }

   .card-body {
       padding: 20px;
   }

   .form-label {
       font-weight: bold;
       color: #555;
   }

   .form-control {
       border-radius: 8px;
       padding: 10px;
       font-size: 14px;
       border: 1px solid #ccc;
       transition: border-color 0.3s;
   }

   .form-control:focus {
       border-color: #007bff;
       box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);
   }

   .form-select {
       border-radius: 8px;
       padding: 10px;
       font-size: 14px;
       border: 1px solid #ccc;
       transition: border-color 0.3s;
   }

   .btn {
       background-color: #007bff;
       color: #fff;
       font-size: 16px;
       font-weight: bold;
       border-radius: 8px;
       padding: 10px 20px;
       transition: background-color 0.3s;
   }

   .btn:hover {
       background-color: #0056b3;
   }

   .error-message {
       color: red;
       font-size: 12px;
       margin-top: 5px;
   }

   .thumbnails-container {
       display: flex;
       flex-wrap: wrap;
       gap: 10px;
   }

   .thumbnail {
       width: 80px;
       height: 80px;
       overflow: hidden;
       border: 1px solid #ccc;
       border-radius: 8px;
       display: flex;
       align-items: center;
       justify-content: center;
       background-color: #f5f5f5;
   }

   .thumbnail img {
       max-width: 100%;
       max-height: 100%;
   }

   .image-cropper {
       border: 1px dashed #ccc;
       border-radius: 8px;
       padding: 10px;
       position: relative;
       margin-top: 10px;
   }

   #addedImagesContainer img {
       border: 1px solid #ddd;
       border-radius: 5px;
       padding: 5px;
       width: 100%;
   }

   #imgView1, #imgView2, #imgView3, #imgView4 {
       display: block;
       max-width: 100%;
       max-height: 200px;
       margin: 10px auto;
   }

   #saveButton1, #saveButton2, #saveButton3, #saveButton4 {
       margin-top: 10px;
       font-size: 12px;
   }

   textarea {
       resize: none;
   }

   select {
       cursor: pointer;
   }

   button[type="submit"], .btn-md {
       background-color: #28a745;
       color: white;
       border: none;
       padding: 10px 20px;
       border-radius: 8px;
       font-size: 16px;
   }

   button[type="submit"]:hover, .btn-md:hover {
       background-color: #218838;
   }

   button[type="button"] {
       background-color: #6c757d;
       color: white;
       border: none;
       padding: 10px 20px;
       border-radius: 8px;
       font-size: 16px;
   }

   button[type="button"]:hover {
       background-color: #5a6268;
   }

   .form-row {
       margin-bottom: 20px;
   }
   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>


               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">


                   <div class="card-body">
                    <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"

                           onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                  
  


                           </div>
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="mb-4">
                            <label class="form-label">Product Details</label>
                            <input name="details" value="<%=product.details%>"  class="form-control border"
                                rows="4">
                                <div id="details-error" class="error-message"></div>
                        </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                           class="form-control border">
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Quantity</label>
                                       <input name="quantity" type="text" value="<%=product.quantity%>"
                                           class="form-control border">
                                           <div id="quantity-error" class="error-message"></div>
                                   </div>
                               </div>
                           </div>
                          
                           <div class="card mb-4">


                            <div class="card-body">
                                <div class="row gx-2">
                                    <div class="col-sm-6 mb-3">
                                        <label class="form-label">Category</label>
                                        <select class="form-select border" style="width: 150px;" name="category">
                                            <% for (let i = 0; i < cat.length; i++) { %>
                                                <option value="<%= cat[i].name %>">
                                                    <%= cat[i].name %>
                                                </option>
                                            <% } %>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            


                                           <div id="category-error" class="error-message"></div>
                                       </div>
                                   </div>
                               </div>
                           </div>
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>

                               <%for(let i=0;i<product.productImage.length;i++){%>
                                  
                                       <div class="col-md-12">
                                           <div class="mb-4">
                                               <div class="col-12">
                                                   <td>
                                                       <input type="hidden" value="<%=product.productImage[i]%>" id="imageDatas">
                                                       <img class="rounded" style="width: 50px; height: 60px;"
                                                           src="/uploads/product-images/<%=product.productImage[i]%>"
                                                           alt="">
                                                           <i onclick="deleteSingleImage('<%=product.productImage[i]%>','<%=product._id%>')" 
                                                            style="position: absolute; margin-left: .5rem; cursor: pointer;" 
                                                            class="fa fa-times"></i>
                                                         
                                                   </td>
                                               </div>
                                              
                                           </div>
                                       </div>
                                       <%}%>
                              
                                       <div class="row">
                                        <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                            <img src="" alt="" id="imgView1">
                                                                        <input class="form-control" type="file" name="images" id="input1"
                                                                            accept="image/png, image/jpeg, image/ image/webp"
                                                                            onchange="viewImage1(event), viewImage(event, 1)">
                                                                            <div id="images-error" class="error-message"></div>
                                                                    </div>
                                                                    <div class="image-cropper d-flex align-items-center"
                                                                        style="display:none;  width: 100%;   margin-bottom: 20px;">
                                                                        <img src="/uploads/product-images/<%=product.productImage[0]%>" width="250px" height="250px"  id="croppedImg1" alt="">
                                                                        <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                                                    </div>
                                                                </div>
                                                               
                                                                <div class="row">
                                                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                        <img src="" alt="" id="imgView2">
            
            
                                                                        <input class="form-control" type="file" name="images" id="input2"
                                                                        accept="image/png, image/jpeg, image/jpg image/webp"
                                                                        onchange="viewImage2(event),viewImage(event, 2)">
                                                                </div>
                                                                <div class="image-cropper d-flex align-items-center"
                                                                    style="display:none; width: 100%;  margin-bottom: 20px;">
                                                                    <img src=""  width="250px" height="250px" id="croppedImg2" alt="">
                                                                    <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                                                </div>
                                                            </div>
                                                           
                                                            <div class="row">
                                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                    <img src="" alt="" id="imgView3">
            
            
                                                                    <input class="form-control" type="file" name="images" id="input3"
                                                                        accept="image/png, image/jpeg, image/jpg image/webp"
                                                                        onchange="viewImage3(event),viewImage(event, 3)">
                                                                </div>
                                                                <div class="image-cropper d-flex align-items-center"
                                                                    style="display:none; width: 100%; margin-bottom: 20px;">
                                                                    <img src="" width="250px" height="250px" id="croppedImg3" alt="">
                                                                     
                                                                    <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                                                </div>
                                                            </div>
                                                           
                                                            <div class="row">
                                                                <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                                                    <img src=""  alt="" id="imgView4">
            
            
                                                           
                                                                    <input class="form-control" type="file" name="images" id="input4"
                                                                    accept="image/png, image/jpeg, image/ image/webp"
                                                                    onchange="viewImage4(event),viewImage(event, 4)">
                                                            </div>
                                                            <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg4" alt="">
                                                            <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                                        </div>
                                                    </div>
                   
                                                </div>
                    
                
                        <button class="btn btn-md rounded font-sm hover-up"  type="button" onclick="validateAndSubmit()">Update</button>
                    </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
       </div>
   </section>
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
   <script>



function deleteSingleImage(imageId, productId) {
    console.log('function triggered');
    fetch('/admin/deleteImage', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json', // Ensuring the request is in JSON format
        },
        body: JSON.stringify({
            imageNameToServer: imageId,
            productIdToServer: productId,
        }),
    })
    .then((response) => response.json()) // Parse the JSON response
    .then((data) => {
        if (data.status === true) {
            window.location.reload(); // Reload the page if the deletion was successful
        }
    })
    .catch((error) => {
        console.error('Error:', error); // Log any errors
    });
}



    function validateAndSubmit() {
    if (validateForm()) {
       document.forms[0].submit();
    }
    }
    
    
    
function viewImage1(event){
document.getElementById("imgView1").src = URL.createObjectURL(event.target.files[0])
}


function viewImage2(event){
document.getElementById("imgView2").src = URL.createObjectURL(event.target.files[0])
}

function viewImage3(event){
document.getElementById("imgView3").src = URL.createObjectURL(event.target.files[0])
}

function viewImage4(event){
document.getElementById("imgView4").src = URL.createObjectURL(event.target.files[0])
}

//for processing image - crop ,changing file name

function viewImage(event, index) {
    const input = event.target;
    const reader = new FileReader();

    reader.onload = function () {
        const dataURL = reader.result;
        const image = document.getElementById("imgView" + index);
        image.src = dataURL;

        // Initialize Cropper.js
        const cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true,
        });

        const cropperContainer = document.querySelector("#croppedImg" + index).parentNode;
        cropperContainer.style.display = "block";

        const saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            const croppedCanvas = cropper.getCroppedCanvas();

            // Update cropped image preview
            const croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            // Create a new file from cropped canvas
            croppedCanvas.toBlob(blob => {
                const timestamp = new Date().getTime();
                const fileName = `cropped-img-${timestamp}-${index}.jpeg`;

                const imgFile = new File([blob], fileName, blob);

                // Update the file input with the cropped file
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;

                // Log updated files for debugging
                console.log(input.files);

                // Hide cropper and destroy instance
                cropperContainer.style.display = "none";
                cropper.destroy();
            }, 'image/jpeg');
        });
    };

    reader.readAsDataURL(input.files[0]);
}

          const selectedImages = [];
document.getElementById('input1').addEventListener('change', handleFileSelect);

function handleFileSelect(event) {
    const addedImagesContainer = document.getElementById('addedImagesContainer');
    addedImagesContainer.innerHTML = "";
    const files = event.target.files;

    for (let i = 0; i < files.length; i++) {
        const file = files[i];
        selectedImages.push(file);

        const thumbnail = document.createElement('div');
        thumbnail.classList.add('thumbnail');

        const img = document.createElement('img');
        img.src = URL.createObjectURL(file);
        img.alt = "thumbnail";
        img.style.width = "50px";
        img.style.height = "auto";




        


        const removeIcon = document.createElement('span');
        removeIcon.classList.add('remove-icon');
        removeIcon.innerHTML = "&times;";
        removeIcon.addEventListener('click', function () {
            const index = selectedImages.indexOf(file);
            if (index !== -1) {
                selectedImages.splice(index, 1);
            }
            thumbnail.remove();
            updateFileInput();
        });

        thumbnail.appendChild(img);
        thumbnail.appendChild(removeIcon);
        addedImagesContainer.appendChild(thumbnail);
    }
    updateFileInput();
}

function updateFileInput() {
    const input = document.getElementById('input1');
    const fileList = new DataTransfer();
    selectedImages.forEach(file => {
        fileList.items.add(file);
    });
    input.files = fileList.files;
}
console.log(document.getElementById('input1').files);





function updateProduct(productId) {
    // Collect updated values from form inputs
    const updatedName = document.getElementsByName('productName')[0].value;
    const updatedDescription = document.getElementsByName('descriptionData')[0].value;
    const updatedDetails = document.getElementsByName('details')[0].value;

    const updatedPrice = document.getElementsByName('regularPrice')[0].value;
    const updatedSalePrice = document.getElementsByName('salePrice')[0].value;
    const updatedCategory = document.getElementsByName('category')[0].value;
    const updatedQuantity = document.getElementsByName('quantity')[0].value;
    
    // If you are including image data or other fields, collect them here as well
    const updatedImages = document.getElementById('input1').files; // Updated images from input
    
    // Validate the form before updating
    if (!validateForm()) {
        return; // Prevent update if validation fails
    }
    
    // Prepare updated data in an object to send to the server
    const updatedProductData = {
        productId: productId,
        name: updatedName,
        description: updatedDescription,
        details:updatedDetails,
        price: updatedPrice,
        salePrice: updatedSalePrice,
    
        category: updatedCategory,
        quantity: updatedQuantity,
        images: updatedImages // Include the updated image files here
    };

    // Send updated data to server using fetch
    fetch('/admin/updateProduct', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json', // Make sure the content is in JSON format
        },
        body: JSON.stringify(updatedProductData) // Send the updated product data
    })
    .then((response) => response.json()) // Parse JSON response
    .then((data) => {
        if (data.status === true) {
            alert('Product updated successfully!');
            window.location.reload(); // Reload the page after successful update
        } else {
            alert('Failed to update product');
        }
    })
    .catch((error) => {
        console.error('Error:', error); // Log any errors during the fetch request
    });
}

    
    function validateForm() {
       let imageDatas = false
               console.log("validate form");
               clearErrorMessages();
               const name = document.getElementsByName('productName')[0].value;
               const description = document.getElementsByName('descriptionData')[0].value;
               const details = document.getElementsByName('details')[0].value;
               const price = document.getElementsByName('regularPrice')[0].value;
               const saleprice = document.getElementsByName('salePrice')[0].value;
               
               const category = document.getElementsByName('category')[0].value;
               const images = document.getElementById('input1')
               const quantity=document.getElementsByName('quantity')
    imageDatas = document.getElementById("imageDatas")?.value;
               let isValid = true;    
               if (name.trim() === "") {
       displayErrorMessage('productName-error', 'Please enter a product name.');
       isValid = false;
    }
              
               if (description=== '') {
                   displayErrorMessage('description-error', 'Please enter a product description.');
                   isValid = false;
               } 
    
    
               if ( parseInt(quantity) < 0) {
                   displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                   isValid = false;
               }
    
    
    
    
               if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                   displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                   isValid = false;
               }
              if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                   displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                   isValid = false;
               }
              
             
               if (!imageDatas && images.files.length === 0) {
                   displayErrorMessage("images-error",'Please select an image.');
                   isValid = false;
               }
               return isValid;
           }
          
           function displayErrorMessage(elementId, message) {
               var errorElement = document.getElementById(elementId);
               errorElement.innerText = message;
               errorElement.style.display = "block";
           }
    
    
           function clearErrorMessages() {
               const errorElements = document.getElementsByClassName('error-message');
               Array.from(errorElements).forEach(element => {
                   element.innerText = '';
               });
               const errorMessage = document.getElementById('errorMessage');
    
    
           }
    
    
         
           
       </script>
    
   
